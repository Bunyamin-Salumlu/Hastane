<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxISEhISEhMVFRUVGBUVFRUVFRAQFRUQFRUWFhUVFRUY
        HSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLiv/2wBDAQoKCg4NDhsQEBstJh8lLS0tLS0tLS0tLS0t
        LS0tLS0tLS0tLS0tLS0rLS0tKy0tLS0tLS0tLS0tLS0tLS0tLSv/wAARCACEAX8DASIAAhEBAxEB/8QA
        GwAAAQUBAQAAAAAAAAAAAAAABQECAwQGAAf/xAA9EAABAwIDBAcGBAUEAwAAAAABAAIDBBEFEiExQVFx
        BhMiYYGRoTJCUrHB0QdicvAjgpLC4RQzovEWJMP/xAAaAQACAwEBAAAAAAAAAAAAAAABAgADBAUG/8QA
        KxEAAgICAgIBAgYCAwAAAAAAAAECEQMhBDESQSIFURMyYYGRoRQVMzRC/9oADAMBAAIRAxEAPwBIYrJK
        uuZENdTuaNvjwQPHekgjvHDYv2F+0M7hxd6BDcPlMjbuJLr6k6kkoYeI3uXRoz8tR1Hs20Ugmhc22pF1
        gpY8r3DgStHh9Z1b2tVDpFABMXDY4XXTxpR0jl5G5bY7DnIo5l0FonWRyE3C3xejDJUwVVwqGFFqqJDC
        2xQkvY0T0b8N57wzMPuvDvBzQP7VrraLz38NZ7TyM+KO/ixw+jivRLLi8pVlZ1eO7xoampw/fySLOXDQ
        sL+IsNpoZPjY5vix1/k8LdrK/iNDeCN/wSDyc0j5tatHFl45UU8hXjZiWuuFZw1vY14lUYXK5RyZdDsK
        7b6OSjT1cDqtjJI9ZYwGSMB7T2tFmyNHvaWBG3RQ0tJI4FoY/N8OUg+SEucDvII1BBsQUcwrG52guMjn
        gbnHN5LLJThH47L4uEn8tA2pp3R9mRpYeDhY24q1hrMrSVpIekUL23mYLW2EZ9Fm8XxamghdIYHmPWzR
        La4J0Hs3HmkjmlJVKLRY8Ki9SRWpK7LQ4jUb55RBH3gAN0/5lZVtxuVTGelL6rq2sY2GCL/ahj2NO9xP
        vOPFTUWN7A9t+8K/A+2+2UZoPX2QXhm7OzVOw913jmnMkjdsKkp4wHA33hXsqo9EH+23w+SKR9pjXDgh
        F/4dhwFvJEcClzRW4EhcXPG43+p08TqVE8DCiMQUEYVhpWRGlkwXFQyThou4gDvQupxYnRmnedvgNyMp
        pdkjCUugtLI1ou4gc0NqMWGxgv3nQeW9CnOJNySTxKQhUPK30aYYEux08znm7iT8vAblA5yUlMIuqmzQ
        kkNc5Q3UhauDUKHsjD09syY5qidopdEqy51iY4qtFJqpkUxWqHhStKgapWlEDJbqKoha4EOaHNOjmneP
        oe9SLrqCmRxro2Yx1sV3xnu7TO5w+qEwvsvRIZjGb7WnRw7uPNU8Y6LxyjPCQ1x1t7rvsp4XuIfxK1L+
        TNQyA7VLlCGVVNJC4te0gj96JsdbbaUo55uWIrgjto5FDy1XcL0eO/Rejo862GKtuocEyvqM4YN4S1r9
        cqqFqCCPpzqj1E7RAI0XoHrVjejNkQQlZohVRHZGQNFTqYlYVItdCZ8tZB+YuYf5mOA9bL1iy8ToZerl
        jf8AC9rvAOBK9u+uq5POVSTOnxH8WhhSOTiEhWI1DEG6XQZ6Ocbw3OOcZD/kCjJTJow9rmHY4Ob4OFvq
        mg/GSYslcWjxmFX4RdUshaSDtGh5jRX6Yr0Keji0LJBwV3CQQCDvXNboFdiZZJJjJCQx6WKynT3EBeKA
        a+84d2wLWSSgfVeWYtW9dPJJuvZv6RoFVJl2ONssUsEJOoLb7wUXgwVp2PPkEBhcr9Lij2EHb3FWxlGi
        qcZX3ovzdHH3uJSPApW4TVMF45Q621pve3ddEYekMTwA4OYf6grzMwyyN7TT7w4KUgW12R4F0ycy0U4u
        Bpm4c16LgVS0glhuHarz+bBoaoEs7EnoeaOdB8FrYX9sARDe4m7h+Vv/AEFn5MIPG90y7BKXmtHoEDio
        avFGt0b2nf8AEeO/wUNfG7L2TpvA0PPvQ1oXBnNx0dvHjUtsWV7nm7zf5DkFwSpCqezTSQ66a5ddIUQC
        FJlTrrlKDYwhNKeSo3PUYURvKE1lVlKIzO0WLxmtJmyjYB6qpssSNBRVd9UUhkuspRy2sjVNOhFhaC4C
        eFDBLcKa6tRUyRpTrJgKeCmFGvCfQVOU5D7J2dx+yRyglYom07A4qSpgr8R2PbEyZliWmxaRcOaePBec
        xYzFJp7Dt7XfQ716zWsE9PJC72g24J3gfVeJ41hNnHvWlY45FZnU5Y3RVyqaDQgptlKxq7TRxr2Wq0nP
        fjYpYnXTpW3a0+HkoG6JaDZZyq3Ru1VZhupIzYq2DpiT2jQwnRMmYo6N1wrT26K4pBE8W1ex4PNnggfx
        Yw+JaLryV41XpfQuXNSRj4czfJxt6WWHnx+CZr4cvk0F3bU0pZAkcuUdAYUl04hIUSHlXSWHJVzt/NmH
        J4D/AO5V6Yo1+IMFqlj/AI4xfmxxb8sqAQOXdwS8saf6HIzRqbQapxdWpZbaBU6J1ml3gony6p62L6Kf
        Set6uneb6u7I5lefU7VqemZLmtG4anmVnMMiLzl2W3rPlkoy2acMbWiyxtgr1NCHAWFz3I/gPRgyWLWO
        f37G+Z0W1w3oaBbrCGj4WbT3F1tPBUS5yj+VFv8AheW5SMRhfR50lr2bz1Pkt3gvRaVgF3gN3gt18rrS
        YfQxRC0bA3jbUnm46lLX17Yhc6kkAAcfsssubkfsvhxcfUVsr02E01Oc9m5joHOsTfuG5FBICL3FuO5Z
        HFKwumZc+7cDuuf8KLFMUfGzL7sjg3k4C48DlWSWdyds3w4VRVGyila72SDyIKHVcGV2mw68u5C8KrbF
        tjoAQ7Tbcj5I9UjM08RqEr+SBKDxTr0DkicmFVlpxKaSkLlGXIBokDlxeoi5RmRCwpEr3KCR6jkmTImO
        eQALk8ErY9VsSS7uy0XJ0A4lFKPo7EyJzHtDjJrI7ffaA07rFEMOw4RC51fvPDuCnkksrFFLbMmXNbqJ
        5vi2GOp3lp1b7ruLfv3JkFRZbrFqNs8ZYdo1aeDvsvP5WFpIOhGh5qmUaejVhyecd9mgop0TY66zFHOj
        VLPdGLDJF8FSqBqkaVYVtEia5qeFxRFKk8Vwf+lk6/o811sz7C9gSNml1tHhU5YgTq0OHA7E+PI4PQs8
        amjxO2qsRhQhWI16No86mXIhdpHDVVpGW1Vuk224rjHcEIJBb0QQuVlVALKzE7RSg9hKjeijTogkDrLb
        dGRG2LrXtDiXFouA4NADTsO839FM+dYsfmyYcEs2TwiZudi2n4dTXjlZwcD4OFv7SqmK4C2XtwFrb+0w
        mwvxbppyVjoTQSwTyNkbZrmAhwILS5rhYX42cVmy8jHmwunv7GiHGyYctSRrZAmW0/fNTyNUFlzDYNKQ
        qUQkp4gG/VQhiPxEp7xwvHuvLTyc2/8AZ6rGNp3gXyOtxyut52XtunAeQXZlsw8x44+NGbJxlOV2eX4b
        TyOiLRG8m9xZjt/gpafoxVPJJjyfrcG+m1emEpjkXzpekBcSPtnnjvw/fLcTytYDuY3rDzubBHMF6E0d
        MOzH1jt7pcsh8BYAeAWjcUmZZ8meeT8zNEMUYdCCIAAAWA2AaAcglITw7YkeqSwadt1msff/ABgDw36/
        vcjGJYgyJovqdwCzGOy5po77XNJH8pF/mFVNmvjY35KXohxuMk08oOt+r00GUtJHq31UtbRF9PI0G7gM
        7P1sIe0ebbeKXEIwae42scx3hnAPo4q3QP1CX2bW9aKOCzF4aQbAgHwIWwpZLtHl4hYugb1bnM+Bzh/L
        e7fQhajDJbg+CMHRRylcbG1ByuI8uSrvkTsYls5p4g+h/wAoXNVd6rm6YuNXFMvOmTDIhomJUkbXu0AJ
        5AlJdjuKXZZdMoy47ldpcFldtGXmfptRmjwWNuru2e/QeX3TqDZXLNGICocNfLrazd7js8OK0dHRsiHZ
        27ydp+yuO4KB7lcoKJknlcxk0lkBr66x2ohXP0KyFZIS7VYeXla0iibpBSHEtbIf0gprnrB7239Siaze
        iTIDJGW+XNZsOVt+LH42WpbMwx1iilJOhs7bFPpX2K1o6pp4JVaZqg1NMiUMitiyuSLYTgExpTgnEEeF
        A5qsFROCBEeFhWYVHUx5XEJYXL1DVHmE72XoDYhXANSh7XK+DsKi7C+itVxWN0yF6v1DeyhbUZKmSL0E
        GFajA61phdAdHZi5p4kgC3PRZSMq3C+ypzYFmxuDLsOZ4cimjWUtU5hylaChxEEarKSVBnc1zHZHEasN
        spdbW27W3cpqwujeMrjlIBtbeRexK8zKE8Eqkj1MJ480bi7NqKo+676+iK08wc0EePP9hYGkrXW2rU4F
        UF0Wb8zh4afVX452zLycKirQXumFyaH6+f0TS5W2YqHEpLqPMml2xCxqJy5cDdRlyVpRsFCvGoUZUhOo
        8fkmlQiEdsKVztL+KY99iwfESPTT5JmazfA+YQbGoy2L1IdORfQdnwG0eqG9Jp2ialt8Ev8A8lFK8OeT
        +c35g2PyVTpM3/2KccInnxLx9lnvs6sIpRig5bNTzNGpcx4bztp62QzDcRcLDjbuvfVTYRUOHtbGgk8h
        qoado7Gmtgg2W6TOrnPM73N+FuneWhFYsXZTRZ5S7WzQGguJda9gBs2IabmSbiHAeAa0I3T9HRVxszOy
        hhLrjbqLW+aMbsqyyiofLoy2K9LpJCCyEgAEAvdbbvIAPzUGGVcjnB0pa7gyxDfQ3PmtLinQ9jdGPd4t
        H0KFOwCUHs5T4kfNVz7Dhli9M1uEVsOgdAxveO15h2q07ABs2dyxGFYJUEjNlaOOa58AFuGgAAcAB5K3
        G7WzHyVBS+LGlcCkJSp0ZmjnFV3lTlQSJ2VlWeK6oMwdrjchFrK1TMCplhjN7JKqBowZlvZTRRBuxHsg
        VKoCb/HhHpCJGA6QUuSV1tjtR4oMDYrZ9JabMwO3t0PIrHSNss81TOrhl5RReppEWppFnqeSxRammUTH
        aDcT1MCqET1ZY5WplMkTXTXJzSlKItnjWKwb+CFNNitd0hpckj2bto5FZCpbYlepnuKkeXhqTiWmOROJ
        1wEEjkRCml0QiM9Bh7LtQOQWJRuF92oRXjtJ5rVixeyaF2iuMQmnfZE4HJYjMv0sttEXbPdtnG43E6kf
        4QBqI0kt0ubDHLHxkh8OaeKXlBl6NpbYjW+gAubngOJW7wyIxwsaRZ1ru/WTc+p9F54KiWM3ie5h/KSL
        8xvT4ultUw9pwf3OY35ixXJX0uUG3F2dSX1RZUlJUekGXammZYqHpyBbrIdOMbv7XfdFaXpRSSadbkPC
        QGP12eqpycfLDtDQzY5dMPdamul1CrQzNeLsc144tcHjzCcVnbaL0ky11uqnY9Dc1lYgkRTA4lxru1yB
        9U47VFAdp4n0GxSNKdFZDXxZmgXtrcHvCpVlTZji7S183dpckd2l/FXaqoDCwHYb/SysxQjUkAgi1iL9
        k7fNBqxrpbPK6d+uYjaXO/qcTb1UuLSiSeM/BHb+ok/Raau6JG5MLwBuY++ndmF7+KGHonUtJd2HE7bO
        19QFR4tHRjng0tg4GzJB8TS3+rQ+hVqiYHOB71ah6L1D/ays19439G3RXDejTmOu97bcGh1z4nYoosLz
        Y17AIeDK5w3nXmAB9AvQsHpskQ0sTqfLRMo8PgaczImA8Q0X53RQK/HCjBn5H4iUUinLACq76MHciBSF
        M4ozqTRWhispHNUoSEIeKD5MiY1ThgSAJc6KSA2LlCY6IJ2ddnTAGdUE+NgCaZE0zhDRCyq0sYKQ1ITT
        MCpaJRVqKUOa5p3iy8+xCmLSQdoK9JzLNdKqHXOBt281nzRVWjXxp1LxZit6v0r1VmZqlidZZzcw/A9W
        2uQmlkRGN6sTKpF1jklRUhjcztiia5UMWc14F72bsINrE6X4HhrxPcrscXJ0ijLJQVkOMYNO/M4MDvy3
        GbyKw9dhDSXB7XRubt3a94K3kmPEOcy+ode3FpFtOOoPmitVRR1MeSSwcRoRbM08/ot2D6j6ktGXP9Lp
        eUXs8afg7h7LweYIUZpZWbWnmNR6LVYrhUlO4skH6XD2XDiD9FRaV14+LXlE40lJOpFLDansm+5QV5vs
        RpjQTqB5BWBE0bAByAVumqKnadmRjcdAQRfiLIlSSKTGo9WngqkJsUijWhnK9hVrlJDOLqGJt2qk95a5
        Fug1ZpGSZgqdTCCqtHVq+X3CiFaoEzRWVNz7bUXmYhdTGlkh4sjjkynM0kHiCQfMI5hvSipi2SF4+GS7
        x57R5rPXT2OVEoRlqSLoykumen4F0miqOw4COTc292u/STv7j6o5qF45G7VbPBulDw0NlGcD3/ft8j81
        z8/BfeP+Dbh5fqZt46gbP3ZXInrOQ18UlskjSTuJyu8jqiFNUHZtWJeSdNGt+LVplisZ1kjGd3zJ+yMh
        mgHBCMPB6wvdtdsG2zRoBz0RshOoNbfsSeRS0vRXc1MIVghREKNCojSWT7JbIUQkpgrjWqtAFcjTxEY0
        xpvVqdJZMAh6tL1alsushRCHq0xzVZsonhSgogLU0hSJLIBIi1RuarBCjLUtBRWc1c1qle1R9Y0bSPNL
        oamx7WqOvp88bm91xzCX/VsG/wAgU11e3cCfIKWuhoxndpGBxGlykoW7RbmtomSEk3A7lWbgEG8OPNxH
        yWRwd6OgsmtmXpp0Xp5ro1FhULdkbfEZvmrLYmjYAOQATKNCuaApLjYAHXaQDoN6qYjQyPGUEsbob5Xv
        ueBa0Xt9VpbJCAr4ZHDoz5Mfm9mArqYS3fa19SN7Tv8ADvWgw/EWCNheAXOvnP5gbeGwFZutqyyxae15
        rRYNQRti/wBQ7tOlY13V7Wt4kDirebxPwfnHp/0Tg838ZeE+1/YUdLBUMMTiCHbt4O4jvWRxLopURklj
        esYNhZYut3t235XWppHRPB7DfIA37kZopARbhs3qcXlTxrXROZxIT3R5NkLTZwIPAgtPkVO6RerywtcL
        Oa1w4OAd81QkwKlO2CPwaB8l0Y/UY/8ApHLl9Pfpnkley7SUPIXscnRqkIsYR4F4+qHVXQekcOy1zDxa
        9x9HXCf/AGONvpi/6/Il2jz2kfoq+IR71s5ugUrf9qVrhwcCx3mLhA8TwOpjB6yF9viAzttzbdaI8jHN
        UmZ5cfJDtGZjmsUXo6u6BVIsdq6lqNdNeWqCnTI4WjTPddUqkKxRUVRIBlhkPflLR5myJs6KVTtoY39T
        7+jQU0s+NdtCxxTfSMjKLJGvWwPQSU7ZoxyD3fQKWH8Oz70/9MZ+rlmfIxr2aFgyfYyUbleB/husVrYv
        w9YNsz/BjR9Vej6D04BaZJde9n2UXLxkfGmzAsc5tr7ytn0df/EZyRL/AMLptLulNu9v2RKkwGnjcHtz
        3HEpZcvG1QVxp2XmSWc0o8NgQQQs7/NXmVdgBposWTJGXRphCS7LhCYQoRWdyUVIVVllMdlS5U0TDinh
        4QISQhW2KoyQKwyVvEeaZCslXJuccR5hNdO0bx5hGwUSLlXdWMHvD1KifiLdwJ8LKeSGUW/RcJVeeZrf
        aIH74KjPXuPs9n1KHPvt2952qt5F6LYYW+wjLiTR7Iv6BUJa+Q7CByCr9WU9wVLnJmmOKKE/1UnxHzSC
        Z5953mUwNShJbLKj9hDfeVwTrLrIEHNUgUbV106FZJZKmgpcyIpxckJTHOTCUA0PJTCUpcoy5QKPOKg3
        tdaTBpT1EY4Ocwfpvm+pXLl2fqn/AF/3Rxvpn/P+zLkz7SOA0Hdor2G1TiuXLhwPRS/KFo5SVYXLlcjF
        PsYQkXLkQHLgVy5QhUqKKJ57cUbu9zGOPmQnQUEQ9mNjf0tDPkuXI2wNIkNK2+9TNpGDdfmlXKIrYvVg
        bgmuC5ciKR5QuLUi5BhFDQlAXLkAnEJVy5FEOsuXLkPYUNL0mYrlyVstSQ4cylAXLkEEVcuXJgCLly5A
        hyY5cuQYyGpCEq5AIlkmQLlyAULZMc1cuUINBTSlXIhFC665coAQlMcuXKEQ26Qrlygx/9k=
</value>
  </data>
</root>